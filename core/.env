CREATE TABLE `lctech`.`tb_usuarios` ( 
`USU_COD` INT(11) NOT NULL , 
`EMP_COD` INT(11) NOT NULL , 
`CRG_COD` INT(11) NOT NULL , 
`USU_DT_CADASTRO` DATETIME NOT NULL , 
`USU_DT_ATUALIZACAO` DATETIME NULL , 
`USU_NOME` VARCHAR(150) NOT NULL , 
`USU_SOBRENOME` VARCHAR(255) NOT NULL , 
`USU_EMAIL` VARCHAR(255) NOT NULL , 
`USU_SENHA` VARCHAR(255) NOT NULL , 
`USU_NIVEL` INT(11) NOT NULL , 
`USU_STATUS` INT NOT NULL , 
PRIMARY KEY (`USU_COD`)) ENGINE = InnoDB;


CREATE TABLE `lctech`.`tb_empresas` ( 
    `EMP_COD` INT(11) NOT NULL AUTO_INCREMENT , 
    `EMP_DT_CADASTRO` DATETIME NOT NULL , 
    `EMP_CPF` VARCHAR(255) NULL , 
    `EMP_CNPJ` VARCHAR(255) NULL ,
    `EMP_RAZAO_SOCIAL` VARCHAR(255) NULL ,
    `EMP_FANTASIA` VARCHAR(255) NULL , 
    `EMP_NUM_INSCRICAO` VARCHAR(255) NULL , 
    `EMP_STATUS` INT(1) NOT NULL , 
    `EMP_TEL_2`, ADD 
    `EMP_CEL_2` VARCHAR(155) NULL AFTER 
    `EMP_CEL_1`, ADD 
    `EMP_EMAIL_1` VARCHAR(155) NULL AFTER 
    `EMP_CEL_2`, ADD 
    `EMP_EMAIL_2` VARCHAR(155) NULL AFTER 
    `EMP_EMAIL_1`, ADD 
    `EMP_DESCRICAO` VARCHAR(255) NULL AFTER `EMP_EMAIL_2`;
PRIMARY KEY (`EMP_COD`)) ENGINE = InnoDB;

CREATE TABLE `lctech`.`tb_modulos` (
`MOD_COD` INT(11) NOT NULL AUTO_INCREMENT , 
`MOD_DT_CADASTRO` DATETIME NOT NULL , 
`MOD_DT_ATUALIZACAO` DATETIME NULL , 
`MOD_NOME` VARCHAR(150) NOT NULL , 
`MOD_DESCRICAO` TEXT NULL , 
`MOD_LINK` VARCHAR(255) NULL ,
`MOD_COR` VARCHAR(25) NULL , 
`MOD_ICON` VARCHAR(155) NULL,
`MOD_STATUS` INT(11) NOT NULL , 
PRIMARY KEY (`MOD_COD`)) ENGINE = InnoDB;

CREATE TABLE `lctech`.`tb_modulos_empresa` (
    `MOD_EMP_COD` INT(11) NOT NULL AUTO_INCREMENT , 
    `EMP_COD` INT(11) NOT NULL , 
    `MOD_COD` INT(11) NOT NULL , 
    `MOD_EMP_DT_CADASTRO` DATETIME NOT NULL , 
`MOD_EMP_STATUS` INT(11) NOT NULL , 
PRIMARY KEY (`MOD_EMP_COD`)) ENGINE = InnoDB;

INSERT INTO `tb_modulos` (
    `MOD_COD`, 
    `MOD_DT_CADASTRO`, 
    `MOD_DT_ATUALIZACAO`, 
    `MOD_NOME`, 
    `MOD_DESCRICAO`, 
    `MOD_LINK`, 
    `MOD_COR`, 
    `MOD_ICON`, 
    `MOD_STATUS`) VALUES (
        NULL, 
        '2023-10-03 15:06:15.000000', 
        NULL, 
        'CADASTROS', 
        'Cadastre seus clientes, fornecedores e usuários da sua empresa', 
        'cadastros', 
        'bg-primary', 
        '1'), (NULL, 
        '2023-10-03 15:06:15.000000', 
        NULL, 'ESTOQUE', 
        'Controle seu estoque, entradas e saídas, compras e reposições.', 
        'estoque', 
        'bg-success', 
        '',
        '1');

INSERT INTO `tb_modulos` (
    `MOD_COD`, 
    `MOD_DT_CADASTRO`, 
    `MOD_DT_ATUALIZACAO`, 
    `MOD_NOME`, 
    `MOD_DESCRICAO`, 
    `MOD_LINK`, 
    `MOD_COR`,
    `MOD_ICON`, 
    `MOD_STATUS`) VALUES (
        NULL, 
        '2023-10-06 00:08:21.000000', 
        NULL, 
        'FINANCEIRO', 
        'Controle e gerencie as finanças da sua empresa/negócio', 
        'financeiro', 
        'bg-secondary', 
        '',
        '1');

 CREATE TABLE `lctech`.`tb_preferencias` (
  `PRF_COD` INT(11) NOT NULL AUTO_INCREMENT ,
  `USU_COD` INT(11) NOT NULL , 
  `PRF_DT_CADASTRO` DATETIME NOT NULL , 
  `PRF_DT_ATUALIZACAO` DATETIME NULL , 
  `PRF_COR` INT(11) NOT NULL , 
  PRIMARY KEY (`PRF_COD`)) ENGINE = InnoDB;


   CREATE TABLE `lctech`.`tb_enderecos` ( 
    `END_COD` INT(11) NOT NULL AUTO_INCREMENT , 
    `EMP_COD` INT(11) NULL ,
    `USU_COD` INT(11) NULL ,
    `FOR_COD` INT(11) NULL ,
    `CLI_COD` INT(11) NULL ,
    `END_DT_CADASTRO` DATETIME NOT NULL , 
    `END_DT_ATUALIZACAO` DATETIME NULL ,
    `END_LOGRADOURO` VARCHAR(255) NULL ,
    `END_NUMERO` VARCHAR(255) NULL , 
    `END_BAIRRO` VARCHAR(255) NULL , 
    `END_CIDADE` VARCHAR(255) NULL , 
    `END_CEP` VARCHAR(255) NULL , 
    `END_ESTADO` VARCHAR(255) NULL , 
    `END_CEP` VARCHAR(255) NULL , 
    `END_TEL_1` VARCHAR(255) NULL , 
    `END_TEL_2` VARCHAR(255) NULL , 
    `END_CEL_1` VARCHAR(255) NULL , 
    `END_CEL_2` VARCHAR(255) NULL , 
    `END_WHATSAPP` VARCHAR(255) NULL , 
    `END_STATUS` INT(1) NOT NULL , 
PRIMARY KEY (`END_COD`)) ENGINE = InnoDB;

CREATE TABLE `lctech`.`tb_recuperacoes` (
	`REC_COD` INT(11) NOT NULL AUTO_INCREMENT,
	`REC_DT_CADASTRO` DATETIME NULL DEFAULT NULL,
	`REC_DT_EXPIRACAO` DATETIME NULL DEFAULT NULL,
	`REC_EMAIL` VARCHAR(250) NULL DEFAULT NULL,
	`REC_TOKEN` VARCHAR(250) NULL DEFAULT NULL,
	PRIMARY KEY (`REC_COD`),
UNIQUE INDEX `REC_EMAIL` (`REC_EMAIL`)) COLLATE='utf8_general_ci' ENGINE=InnoDB;

ALTER TABLE tb_usuarios
ADD COLUMN USU_SEXO VARCHAR(1) AFTER USU_SOBRENOME;

CREATE TABLE `lctech`.`tb_usuarios_empresa` (
`UMP_COD` INT(11) NOT NULL AUTO_INCREMENT , 
`EMP_COD` INT(11) NOT NULL , 
`USU_COD` INT(11) NOT NULL , 
`UMP_DT_CADASTRO` DATETIME NOT NULL , 
PRIMARY KEY (`UMP_COD`)) ENGINE = InnoDB;


CREATE TABLE `lctech`.`tb_contas` (
    `CTA_COD` INT(11) NOT NULL AUTO_INCREMENT , 
    `CTA_DT_CADASTRO` DATETIME NOT NULL , 
    `CTA_DT_ATUALIZACAO` DATETIME NULL , 
    `CTA_NOME` VARCHAR NOT NULL , 
    `EMP_COD` INT(11) NULL ,
    `CTA_DESCRICAO` TEXT NOT NULL , 
    `CTA_SALDO` DECIMAL(10,2) NOT NULL , 
    `CTA_STATUS` INT(1) NOT NULL , 
    `CTA_TIPO` INT(1) NOT NULL , 
PRIMARY KEY (`CTA_COD`)) ENGINE = InnoDB;

CREATE TABLE `lctech`.`tb_estoque` (
`EST_COD` INT(11) NOT NULL , 
`EMP_COD` INT(11) NOT NULL , 
`USU_COD` INT(11) NOT NULL , 
`CAT_COD` INT(11) NULL , 
`REF_COD` INT(11) NULL , 
`EST_DT_CADASTRO` DATETIME NOT NULL , 
`EST_DT_ATUALIZACAO` DATETIME NULL , 
`EST_TIPO` INT(11) NOT NULL , 
`EST_DESCRICAO` VARCHAR(255) NOT NULL , 
`EST_QTD_INICIAL` INT(11) NOT NULL , 
`EST_QTD_MIN` INT(11) NOT NULL , 
`EST_QTD_FINAL` INT(11) NOT NULL , 
`EST_CUSTO_UNITARIO` INT NOT NULL , 
`EST_VALOR_VENDA` INT NOT NULL , 
`EST_STATUS` INT NOT NULL ) ENGINE = InnoDB;

CREATE TABLE IF NOT EXISTS `tb_categorias` (
  `CAT_COD` int(11) NOT NULL AUTO_INCREMENT,
  `EMP_COD` int(11) DEFAULT NULL,
  `USU_COD` int(11) DEFAULT NULL,
  `CAT_DESCRICAO` varchar(150) DEFAULT NULL,
  `CAT_DT_CADASTRO` datetime DEFAULT NULL,
  `CAT_NIVEL` varchar(150) DEFAULT NULL,
  `CAT_STATUS` varchar(150) DEFAULT NULL,
  PRIMARY KEY (`CAT_COD`),
  KEY `USU_COD` (`USU_COD`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8;

CREATE TABLE IF NOT EXISTS `tb_registros_acessos` (
  `REG_COD` int(11) NOT NULL AUTO_INCREMENT,
  `USU_COD` int(11) DEFAULT 0,
  `REG_DT_ENTRADA` datetime DEFAULT '0000-00-00 00:00:00',
  `REG_DT_SAIDA` datetime DEFAULT '0000-00-00 00:00:00',
  PRIMARY KEY (`REG_COD`),
  KEY `USU_COD` (`USU_COD`)
) ENGINE=InnoDB AUTO_INCREMENT=0 DEFAULT CHARSET=utf8;

CREATE TABLE `lctech`.`tb_produtos` (
    `PRO_COD` INT(11) NOT NULL AUTO_INCREMENT , 
    `EMP_COD` INT(11) NOT NULL , 
    `USU_COD` INT(11) NOT NULL , 
    `EST_COD` INT(11) NOT NULL , 
    `PRO_DT_CADASTRO` DATETIME NOT NULL , 
    `PRO_DT_ATUALIZACAO` DATETIME NOT NULL , 
    `PRO_NOME` VARCHAR(155) NOT NULL ,
    `PRO_DESCRICAO` VARCHAR(255) NULL , 
    `PRO_CODIGO` VARCHAR(100) NULL , 
    `PRO_REFERENCIA` VARCHAR(100) NULL , 
    `PRO_GRUPO` VARCHAR(100) NULL , 
    `PRO_PRECO_UNITARIO` DECIMAL(10,2) NULL , 
    `PRO_PRECO_VENDA` DECIMAL(10,2) NULL , 
    `PRO_UNIDADE` VARCHAR(155) NULL , 
    `PRO_DESCONTO` VARCHAR(155) NULL , 
    `PRO_MARGEM` VARCHAR(155) NULL , 
    `PRO_QUANTIDADE` INT(11) NOT NULL , 
    `PRO_IMPOSTO` VARCHAR(155) NULL , 
    `PRO_QTD_MIN` INT(11) NULL , 
    `PRO_QTD_MAX` INT(11) NULL , 
    `FOR_COD` INT(11) NULL , 
    `CAT_COD` INT(11) NULL , 
`PRO_STATUS` INT(11) NOT NULL , PRIMARY KEY (`PRO_COD`)) ENGINE = InnoDB;

CREATE TABLE `lctech`.`tb_movimentacao` (
    `MOV_COD` INT(11) NOT NULL AUTO_INCREMENT , 
    `EMP_COD` INT(11) NOT NULL , 
    `USU_COD` INT(11) NOT NULL , 
    `EST_COD` INT(11) NOT NULL , 
    `PRO_COD` INT(11) NULL ,
    `SER_COD` INT(11) NULL , 
    `MOV_DT_CADASTRO` DATETIME NOT NULL , 
    `MOV_DT_ATUALIZACAO` DATETIME NULL , 
    `MOV_ENTRADA` VARCHAR(155) NULL , 
    `MOV_SAIDA` VARCHAR(155) NULL , 
    `MOV_STATUS` INT(11) NOT NULL , 
`CLI_COD` INT(11) NULL , PRIMARY KEY (`MOV_COD`)) ENGINE = InnoDB;

CREATE TABLE `lctech`.`tb_clientes` (
    `CLI_COD` INT(11) NOT NULL AUTO_INCREMENT , 
    `EMP_COD` INT(11) NOT NULL , 
    `USU_COD` INT(11) NOT NULL , 
    `END_COD` INT(11) NULL , 
    `CLI_DT_CADASTRO` DATETIME NOT NULL , 
    `CLI_DT_ATUALIZACAO` DATETIME NULL , 
    `CLI_NOME` VARCHAR(155) NOT NULL , 
    `CLI_SOBRENOME` VARCHAR(255) NOT NULL , 
    `CLI_TEL_1` VARCHAR(155) NULL , 
    `CLI_TEL_2` VARCHAR(155) NULL , 
    `CLI_EMAIL` VARCHAR(255) NULL , 
    `CLI_REGISTRO` VARCHAR(255) NULL,
    `CLI_DT_NASCIMENTO` DATE NULL , 
    `CLI_OBSERVACAO` TEXT NULL , 
`CLI_STATUS` INT(11) NOT NULL , PRIMARY KEY (`CLI_COD`)) ENGINE = InnoDB;

CREATE TABLE `lctech`.`tb_fornecedores` (
    `FOR_COD` INT(11) NOT NULL AUTO_INCREMENT , 
    `EMP_COD` INT(11) NOT NULL , 
    `USU_COD` INT(11) NOT NULL , 
    `FOR_DT_CADASTRO` DATETIME NOT NULL , 
    `FOR_DT_ATUALIZACAO` DATETIME NULL , 
    `FOR_TIPO` VARCHAR(155) NULL,
    `FOR_NOME_FANTASIA` VARCHAR(255) NOT NULL , 
    `FOR_RAZAO_SOCIAL` VARCHAR(255) NULL , 
    `FOR_REGISTRO` VARCHAR(255) NULL , 
    `FOR_INSCRICAO_ESTADUAL` VARCHAR(255) NULL , 
    `END_COD` INT(11) NULL , 
    `FOR_TEL_1` VARCHAR(255) NULL , 
    `FOR_TEL_2` VARCHAR(255) NULL , 
    `FOR_CEL_1` VARCHAR(255) NULL , 
    `FOR_CEL_2` VARCHAR(55) NULL , 
    `FOR_EMAIL_1` VARCHAR(155) NULL , 
    `FOR_EMAIL_2` VARCHAR(155) NULL , 
    `FOR_RESPONSAVEL` VARCHAR(155) NULL , 
    `FOR_DESCRICAO` TEXT NULL , 
`FOR_STATUS` INT(11) NOT NULL , PRIMARY KEY (`FOR_COD`)) ENGINE = InnoDB;


CREATE TABLE `lctech`.`tb_vendedores` (
    `VDD_COD` INT(11) NOT NULL AUTO_INCREMENT ,
     `EMP_COD` INT(11) NOT NULL , 
     `USU_COD` INT(11) NOT NULL , 
     `VDD_DT_CADASTRO` DATETIME NOT NULL , 
     `VDD_DT_ATUALIZACAO` DATETIME NULL , 
     `VDD_CODIGO` VARCHAR(14) NULL , 
     `VDD_NOME` VARCHAR(155) NOT NULL , 
     `VDD_SOBRENOME` VARCHAR(155) NULL , 
     `VDD_EMAIL` VARCHAR(255) NULL , 
     `VDD_SENHA` VARCHAR(300) NOT NULL,
     `VDD_TELEFONE` VARCHAR(255) NULL , 
     `VDD_COMISSAO` VARCHAR(15) NULL , 
     `VDD_SEXO` INT(11) NOT NULL , 
     `VDD_NIVEL` INT(11) NOT NULL , 
`VDD_STATUS` INT(11) NOT NULL , PRIMARY KEY (`VDD_COD`)) ENGINE = InnoDB;


CREATE TABLE `lctech`.`tb_cargos_salarios` (
    `CGS_COD` INT(11) NOT NULL AUTO_INCREMENT , 
    `EMP_COD` INT(11) NOT NULL , 
    `USU_COD` INT(11) NOT NULL , 
    `CGS_DT_CADASTRO` DATETIME NOT NULL , 
    `CGS_DT_ATUALIZACAO` DATETIME NULL , 
    `CGS_NOME` VARCHAR(155) NOT NULL , 
    `CGS_SALARIO` DECIMAL(10,2) NULL , 
    `CGS_COMISSAO` VARCHAR(11) NULL , 
    `CGS_STATUS` INT(11) NOT NULL , PRIMARY KEY (`CGS_COD`)) ENGINE = InnoDB;


/****
//CADASTRO - FORNECEDORES
    public function fornecedores()
    {
        $this->dados['title'] .= 'FORNECEDORES';
        $Check = new Check;
        $Usuarios = new Usuarios;
        $Fornecedores = new Fornecedores;
        $Fornecedores->setCodEmpresa($_SESSION['EMP_COD']);
        $this->dados['fornecedores'] = $Fornecedores->listarTodos(0);
        $this->link[2] = ['link'=> 'cadastros/fornecedores','nome' => 'LISTAGEM DE FORNECEDORES'];
        $Check->setLink($this->link);
        $this->dados['breadcrumb'] = $Check->breadcrumb();
        $this->render('admin/cadastros/fornecedores/listar', $this->dados);
    }
    public function cadastro_fornecedores()
    {
        $this->dados['title'] .= 'FORNECEDORES';
        $Check = new Check;
        $Usuarios = new Usuarios;
        $Fornecedores = new Fornecedores;
        $Empresa = new Empresas;
        $UsuariosEmpresa = new UsuariosEmpresa;
        $Usuarios->setCodUsuario($_SESSION['USU_COD']);
        $this->dados['usuario'] = $Usuarios->listar(0);
        $UsuariosEmpresa->setCodUsuario($_SESSION['USU_COD']);
        $this->dados['usuarios_empresa'] = $UsuariosEmpresa->checarUsuario();
        if (isset($this->dados['usuarios_empresa']['UMP_COD'])) {
            $_SESSION['EMP_COD'] = $this->dados['usuarios_empresa']['EMP_COD'];
            $Empresa->setCodigo($_SESSION['EMP_COD']);
            $this->dados['empresa'] = $Empresa->listar(0);
            $UsuariosEmpresa->setCodEmpresa($_SESSION['EMP_COD']);
            $this->dados['usuarios'] = $UsuariosEmpresa->listarTodos(0);
        }
        $Fornecedores->setCodEmpresa($_SESSION['EMP_COD']);
        $this->dados['fornecedores'] = $Fornecedores->listarTodos(0);

        $this->link[2] = ['link'=> 'cadastros/fornecedores','nome' => 'LISTAGEM DE FORNECEDORES'];
        $this->link[3] = ['link'=> 'cadastros/cadastro_fornecedores','nome' => 'CADASTRAR FORNECEDORES'];
        $Check->setLink($this->link);
        $this->dados['breadcrumb'] = $Check->breadcrumb();
        $this->render('admin/cadastros/fornecedores/cadastrar', $this->dados);
    }
 public function cadastrar_fornecedores()
    {
        $this->dados['title'] .= 'FORNECEDORES';
        $Check = new Check;
        $Usuarios = new Usuarios;
        $Enderecos = new Enderecos;
        $Fornecedores = new Fornecedores;
        $Empresa = new Empresas;
        $UsuariosEmpresa = new UsuariosEmpresa;
        $Usuarios->setCodUsuario($_SESSION['USU_COD']);
        $this->dados['usuario'] = $Usuarios->listar(0);
        $UsuariosEmpresa->setCodUsuario($_SESSION['USU_COD']);
        $this->dados['usuarios_empresa'] = $UsuariosEmpresa->checarUsuario();
        if (isset($this->dados['usuarios_empresa']['UMP_COD'])) {
            $_SESSION['EMP_COD'] = $this->dados['usuarios_empresa']['EMP_COD'];
            $Empresa->setCodigo($_SESSION['EMP_COD']);
            $this->dados['empresa'] = $Empresa->listar(0);
            $UsuariosEmpresa->setCodEmpresa($_SESSION['EMP_COD']);
            $this->dados['usuarios'] = $UsuariosEmpresa->listarTodos(0);
        }

        
        $this->link[2] = ['link'=> 'cadastros/fornecedores','nome' => 'LISTAGEM DE FORNECEDORES'];
        //Recupera os dados enviados
        $dados = filter_input_array(INPUT_POST, FILTER_DEFAULT);
        if (isset($_POST) && isset($dados['CADASTRAR_NOVO_FORNECEDOR'])) {

            unset($dados['CADASTRAR_NOVO_FORNECEDOR']);
            if($_SESSION['USU_COD'] == $dados['USU_COD'] && $_SESSION['EMP_COD'] == $dados['EMP_COD']){
                foreach ($dados as $key => $value) {
                    //Verifica se tem algum valor em branco
                    $value = $Check->checarString($value);
                        //if(empty($dados["$key"])){
                          //  Sessao::alert('ERRO',' 2- Preencha todos os campos!','alert alert-danger');
                           // $ok = false;
                           // break;
                     //   }
                }

                $Fornecedores->setcodRegistro($dados['FOR_REGISTRO']);
                $Fornecedores->setCodEmpresa($dados['EMP_COD']);
                //Verificar se já existe cadastro da empresa pelo REGISTRO: CPF ou CNPJ informado
                $forn = $Fornecedores->checarRegistro();
                if(!$forn){
                    $dados += array(
                        'FOR_DT_CADASTRO'=> date('Y-m-d H:i:s'),
                        'FOR_DT_ATUALIZACAO'=> date('0000-00-00 00:00:00'),          
                        'FOR_STATUS'=> 1
                    );
                    $db_endereco = array(
                        'END_DT_CADASTRO' => date('Y-m-d H:i:s'),
                        'END_DT_ATUALIZACAO' => date('0000-00-00 00:00:00'),
                        'END_LOGRADOURO' =>  $dados['END_LOGRADOURO'],
                        'END_NUMERO' =>  $dados['END_NUMERO'],
                        'END_BAIRRO' =>  $dados['END_BAIRRO'],
                        'END_CIDADE' =>  $dados['END_CIDADE'],
                        'END_ESTADO' =>  $dados['END_ESTADO'],
                        'END_CEP'    =>  $dados['END_CEP'],
                        'END_STATUS' => 1
                    );

                    //REMOVENDO DADOS DE ENDERECO DA ATUALIZACAO DA EMPRESA
                    unset($dados["END_LOGRADOURO"]);
                    unset($dados["END_NUMERO"]);
                    unset($dados["END_BAIRRO"]);
                    unset($dados["END_CEP"]);
                    unset($dados["END_CIDADE"]);
                    unset($dados["END_ESTADO"]);
                    $id = $Fornecedores->cadastrar($dados,0);
                    if($id){ 
                        $Enderecos->setCodFornecedor($id);
                        $endr = $Enderecos->checarEnderecoFornecedor();
                        if(!$endr){
                            $db_endereco['FOR_COD'] = $id;
                            if ($Enderecos->cadastrar($dados,0)) {
                                Sessao::alert('OK','Cadastro efetuado com sucesso!','fs-4 alert alert-success');
                            }else {
                                Sessao::alert('OK','Cadastro efetuado com sucesso, não foi possível cadastrar o endereço!','fs-4 alert alert-warning');
                            }
                        }else {
                            Sessao::alert('OK','Cadastro efetuado com sucesso, endereço já cadastrado!','fs-4 alert alert-success');
                        }
                    }else{
                        Sessao::alert('ERRO',' 4- Erro ao cadastrar novo fornecedor, entre em contato com o suporte!','fs-4 alert alert-danger');
                    }
                }else {
                    Sessao::alert('ERRO',' 3- Cadastro já realizado!','fs-4 alert alert-danger');
                }
            }else {
                Sessao::alert('ERRO',' 2- Acesso inválido!','fs-4 alert alert-danger');
            }
        }else {
            Sessao::alert('ERRO',' 1- Dados inválido(s)!','fs-4 alert alert-danger');
        }

        $Fornecedores->setCodEmpresa($_SESSION['EMP_COD']);
        $this->dados['fornecedores'] = $Fornecedores->listarTodos(0);
        $this->link[3] = ['link'=> 'cadastros/cadastro_fornecedores','nome' => 'CADASTRAR FORNECEDORES'];
        $Check->setLink($this->link);
        $this->dados['breadcrumb'] = $Check->breadcrumb();
        $this->render('admin/cadastros/fornecedores/cadastrar', $this->dados);
    }
public function alterar_fornecedores()
    {
        $this->dados['title'] .= 'FORNECEDORES';
        $Check = new Check;
        $Usuarios = new Usuarios;
        $Empresa = new Empresas;
        $Enderecos = new Enderecos;
        $Fornecedores = new Fornecedores;
        $UsuariosEmpresa = new UsuariosEmpresa;
        $Usuarios->setCodUsuario($_SESSION['USU_COD']);
        $this->dados['usuario'] = $Usuarios->listar(0);
        $UsuariosEmpresa->setCodUsuario($_SESSION['USU_COD']);
        $this->dados['usuarios_empresa'] = $UsuariosEmpresa->checarUsuario();
        if (isset($this->dados['usuarios_empresa']['UMP_COD'])) {
            $_SESSION['EMP_COD'] = $this->dados['usuarios_empresa']['EMP_COD'];
            $Empresa->setCodigo($_SESSION['EMP_COD']);
            $this->dados['empresa'] = $Empresa->listar(0);
            $UsuariosEmpresa->setCodEmpresa($_SESSION['EMP_COD']);
            $this->dados['usuarios'] = $UsuariosEmpresa->listarTodos(0);
        }
        $dados = filter_input_array(INPUT_GET, FILTER_DEFAULT);
        $dados = explode("/",$dados['url']);
    
        $this->link[2] = ['link'=> 'cadastros/fornecedores','nome' => 'LISTAGEM DE FORNECEDORES'];
       
        $Fornecedores->setCodEmpresa($_SESSION['EMP_COD']);
        $this->dados['fornecedores'] = $Fornecedores->listarTodos(0);
        if (isset($dados[1]) && $dados[1] == 'alterar_fornecedores') {
            
            if($_SESSION['EMP_COD'] == $dados[2] && isset($dados[3]) && $dados[3] !=''){
                $Fornecedores->setCodEmpresa($dados[2]);
                $Fornecedores->setCodigo($dados[3]);
                $Enderecos->setCodFornecedor($dados[3]);
                $this->dados['fornecedor'] = $Fornecedores->listar(0);
               // $endr = $Enderecos->checarEnderecoFornecedor();
                //if ($endr) {
                   // $this->dados['fornecedor'] += $endr[0];
                //}
                if ($this->dados['fornecedor'] != 0) {
                    $this->link[3] = ['link'=> 'cadastros/fornecedores/alterar_fornecedores/'.$_SESSION['EMP_COD'].'/'.$dados[3],'nome' => 'ALTERAR FORNECEDORES'];
                    $Check->setLink($this->link);
                    $this->dados['breadcrumb'] = $Check->breadcrumb();
                    $this->render('admin/cadastros/fornecedores/alterar', $this->dados);
                }else {
                    $Check->setLink($this->link);
                    $this->dados['breadcrumb'] = $Check->breadcrumb();
                    Sessao::alert('ERRO',' 3- Fornecedor não foi encontrado!','fs-4 alert alert-danger');
                    $this->render('admin/cadastros/fornecedores/listar', $this->dados);
                }
                
            }else{
                $Check->setLink($this->link);
                $this->dados['breadcrumb'] = $Check->breadcrumb();
                Sessao::alert('ERRO',' 2- Acesso inválido(s)!','fs-4 alert alert-danger');
                $this->render('admin/cadastros/clientes/listar', $this->dados);
            }
        }else {
            $Check->setLink($this->link);
            $this->dados['breadcrumb'] = $Check->breadcrumb();
            Sessao::alert('ERRO',' 1- Dados inválido(s)!','fs-4 alert alert-danger');
            $this->render('admin/cadastros/clientes/listar', $this->dados);
        }
    }
    public function alterar_fornecedores_empresa()
    {
        $this->dados['title'] .= 'FORNECEDORES';
        $Check = new Check;
        $Usuarios = new Usuarios;
        $Enderecos = new Enderecos;
        $Empresa = new Empresas;
        $Fornecedores = new Fornecedores;
        $Clientes = new Clientes;
        $UsuariosEmpresa = new UsuariosEmpresa;
        $Usuarios->setCodUsuario($_SESSION['USU_COD']);
        $this->dados['usuario'] = $Usuarios->listar(0);
        $UsuariosEmpresa->setCodUsuario($_SESSION['USU_COD']);
        $this->dados['usuarios_empresa'] = $UsuariosEmpresa->checarUsuario();
        if (isset($this->dados['usuarios_empresa']['UMP_COD'])) {
            $_SESSION['EMP_COD'] = $this->dados['usuarios_empresa']['EMP_COD'];
            $Empresa->setCodigo($_SESSION['EMP_COD']);
            $this->dados['empresa'] = $Empresa->listar(0);
            $UsuariosEmpresa->setCodEmpresa($_SESSION['EMP_COD']);
            $this->dados['usuarios'] = $UsuariosEmpresa->listarTodos(0);
        }
        $this->link[2] = ['link'=> 'cadastros/fornecedores','nome' => 'LISTAGEM DE FORNECEDORES'];
         //Recupera os dados enviados
         $dados = filter_input_array(INPUT_POST, FILTER_DEFAULT);
        
         if (isset($_POST) && isset($dados['ALTERAR_FORNECEDOR'])) {
 
             unset($dados['ALTERAR_FORNECEDOR']);
            
             if($_SESSION['USU_COD'] == $dados['USU_COD'] && $_SESSION['EMP_COD'] == $dados['EMP_COD']){
               
                foreach ($dados as $key => $value) {
                    //Verifica se tem algum valor proibido
                    $value = $Check->checarString($value);
                }
                
                $this->link[3] = ['link'=> 'cadastros/fornecedores/alterar_fornecedores/'.$dados['EMP_COD'].'/'.$dados['FOR_COD'],'nome' => 'ALTERAR FORNECEDORES'];

                $db_endereco = array(
                    'END_LOGRADOURO' => $dados['END_LOGRADOURO'],
                    'END_NUMERO' => $dados['END_NUMERO'],
                    'END_BAIRRO' => $dados['END_BAIRRO'],
                    'END_CIDADE' => $dados['END_CIDADE'],
                    'END_CEP'    => $dados['END_CEP'],
                    'END_ESTADO' => $dados['END_ESTADO'],
                    'END_STATUS' => 1
                );
                
                $Fornecedores->setCodigo($dados['FOR_COD']);
                $Fornecedores->setCodEmpresa($dados['EMP_COD']);

                $Enderecos->setCodFornecedor($dados['FOR_COD']);
                $Enderecos->setCodigo($dados['END_COD']);

                $codEnd = $dados['END_COD'];
                $codFor = $dados['FOR_COD'];
              
                unset($dados['END_LOGRADOURO']);
                unset($dados['END_NUMERO']);
                unset($dados['END_BAIRRO']);
                unset($dados['END_CIDADE']);
                unset($dados['END_CEP']);
                unset($dados['END_ESTADO']);

                unset($dados['FOR_COD']);
                unset($dados['EMP_COD']);
                unset($dados['END_COD']);

                $dados += array(
                    'FOR_DT_ATUALIZACAO'=> date('Y-m-d H:i:s')
                );
                if($Fornecedores->alterar($dados,0)){

                    if($codEnd != 0){
                        
                        $db_endereco += array(
                            'END_DT_ATUALIZACAO'=> date('Y-m-d H:i:s')
                        );

                        if($Enderecos->alterarFornecedor($db_endereco,0)){
                            Sessao::alert('OK','Cadastro alterado com sucesso!','fs-4 alert alert-success');
                        }else {
                            Sessao::alert('OK','Cadastro alterado, endereço não alterado!','fs-4 alert alert-warning');
                        }
                    }else {

                        $db_endereco += array(
                            'FOR_COD' => $codFor,
                            'END_DT_CADASTRO' => date('Y-m-d H:i:s'),
                            'END_DT_ATUALIZACAO' => date('0000-00-00 00:00:00'),
                            'END_STATUS' => 1
                        );
                        //CADASTRAR O ENDERECO
                        if($Enderecos->cadastrar($db_endereco,0)){
                            Sessao::alert('OK','Cadastro alterado com sucesso, endereço cadastrado!','fs-4 alert alert-success');
                        }else {
                            Sessao::alert('OK','Cadastro alterado, endereço não alterado!','fs-4 alert alert-warning');
                        }
                    }
                }else{
                    Sessao::alert('ERRO',' 3- Erro ao alterar o cliente da empresa, entre em contato com o suporte!','fs-4 alert alert-danger');
                }

                $this->dados['fornecedor'] = $Fornecedores->listar(0);

                if ($this->dados['fornecedor'] != 0) {
                    $Check->setLink($this->link);
                    $this->dados['breadcrumb'] = $Check->breadcrumb();
                    $this->render('admin/cadastros/fornecedores/alterar', $this->dados);
                }else {
                    $Check->setLink($this->link);
                    $this->dados['breadcrumb'] = $Check->breadcrumb();
                    Sessao::alert('ERRO',' 3- Fornecedor não foi encontrado!','fs-4 alert alert-danger');
                    $this->render('admin/cadastros/fornecedores/listar', $this->dados);
                }
             }
        }
    }
    public function desativar_fornecedores()
    {
        $this->dados['title'] .= 'FORNECEDORES';
        $Usuarios = new Usuarios;
        $Empresa = new Empresas;
        $Fornecedores = new Fornecedores;
        $UsuariosEmpresa = new UsuariosEmpresa;
        $Usuarios->setCodUsuario($_SESSION['USU_COD']);
        $this->dados['usuario'] = $Usuarios->listar(0);  
        $UsuariosEmpresa->setCodUsuario($_SESSION['USU_COD']);
        $this->dados['usuarios_empresa'] = $UsuariosEmpresa->checarUsuario();
        if (isset($this->dados['usuarios_empresa']['UMP_COD'])) {
            $_SESSION['EMP_COD'] = $this->dados['usuarios_empresa']['EMP_COD'];
            $Empresa->setCodigo($_SESSION['EMP_COD']);
            $this->dados['empresa'] = $Empresa->listar(0);
            $UsuariosEmpresa->setCodEmpresa($_SESSION['EMP_COD']);
            $this->dados['usuarios'] = $UsuariosEmpresa->listarTodos(0);
        }
        //Recupera os dados enviados
        $dados = filter_input_array(INPUT_POST, FILTER_DEFAULT);
        if (isset($_POST) && isset($dados['EXCLUIR_FORNECEDOR'])) {

            $Fornecedores->setCodEmpresa($dados['EMP_COD']);
            $Fornecedores->setCodigo($dados['FOR_COD']);
            $db = array(
                'FOR_DT_ATUALIZACAO'=> date('Y-m-d H:i:s'),
                'FOR_STATUS' => 2
            );
            if($Fornecedores->alterar($db,0)){
                //Sessao::alert('OK','Exclusao efetuada com sucesso!','fs-4 alert alert-success');
                $respota = array(
                    'COD'=>'OK',
                    'MENSAGEM' => 'Desativação efetuada com sucesso!'
                );
                echo json_encode($respota);
            }else{
                $respota = array(
                    'COD'=>'ERRO',
                    'MENSAGEM'=> 'ERRO 2- Erro ao desativar fornecedor, entre em contato com o suporte!'
                );
                echo json_encode($respota);
            }
        }else {
            $respota = array(
                'COD'=>'ERRO',
                'MENSAGEM'=> 'ERRO 1- Acesso inválido!'
            );
            echo json_encode($respota);
        }
    }








//CADASTRO - EMPRESAS
    public function empresas()
    {
        $this->dados['title'] .= 'EMPRESA/NEGÓCIO';
        $Usuarios = new Usuarios;
        $Empresa = new Empresas;
        $Enderecos = new Enderecos;
        $UsuariosEmpresa = new UsuariosEmpresa();
        $Usuarios->setCodUsuario($_SESSION['USU_COD']);
        $this->dados['usuario'] = $Usuarios->listar(0);
        $UsuariosEmpresa->setCodUsuario($_SESSION['USU_COD']);
        $this->dados['usuarios_empresa'] = $UsuariosEmpresa->checarUsuario();
        if (isset($this->dados['usuarios_empresa']['UMP_COD'])) {
            $this->dados['empresas'] = $UsuariosEmpresa->listarTodasEmpresasUsuario();
        }
        $this->render('admin/cadastros/empresas/listar', $this->dados);
    }





public function cadastro_empresas()
    {
        $this->dados['title'] .= 'EMPRESA/NEGÓCIO';
        $Usuarios = new Usuarios();
        $Check = new Check();
        $Url = new Url();
        $Empresa = new Empresas;
        $Enderecos = new Enderecos;
        $UsuariosEmpresa = new UsuariosEmpresa();
        $ModulosEmpresa = new ModulosEmpresa;
        $Financas = new Financas;
        $Usuarios->setCodUsuario($_SESSION['USU_COD']);
        $this->dados['usuario'] = $Usuarios->listar(0);
        $UsuariosEmpresa->setCodUsuario($_SESSION['USU_COD']);
        $this->dados['usuarios_empresa'] = $UsuariosEmpresa->checarUsuario();
        if (isset($this->dados['usuarios_empresa']['UMP_COD'])) {
            $_SESSION['EMP_COD'] = $this->dados['usuarios_empresa']['EMP_COD'];
            $Empresa->setCodigo($_SESSION['EMP_COD']);
            $this->dados['empresa'] = $Empresa->listar(0);
            $ModulosEmpresa->setCodEmpresa($_SESSION['EMP_COD']);
            $this->dados['modulos_empresa'] = $ModulosEmpresa->listar();
        }else {
            $this->dados['modulos_empresa'] = false;
            $this->dados['empresa'] = false;
        }
        $this->render('admin/cadastros/empresas/cadastrar', $this->dados);
    }
    public function cadastrar_empresas()
    {
        $this->dados['title'] .= 'EMPRESA/NEGÓCIO';
        $Usuarios = new Usuarios();
        $Check = new Check();
        $Url = new Url();
        $Empresa = new Empresas;
        $Enderecos = new Enderecos;
        $UsuariosEmpresa = new UsuariosEmpresa();
        $ModulosEmpresa = new ModulosEmpresa;
        $Financas = new Financas;

        $Usuarios->setCodUsuario($_SESSION['USU_COD']);
        $this->dados['usuario'] = $Usuarios->listar(0);

        //Recupera os dados enviados
        $dados = filter_input_array(INPUT_POST, FILTER_DEFAULT);
        
        if (isset($_POST) && isset($dados['CADASTRAR_EMPRESA'])) {
            //Verifica se os campos foram todos preenchidos
            unset($dados['CADASTRAR_EMPRESA']);
                
            $Empresa->setcodRegistro($dados['EMP_REGISTRO']);
            //Verificar se já existe cadastro da empresa pelo REGISTRO: CPF ou CNPJ informado
            $emp = $Empresa->checarRegistroEmpresa();
            if(!$emp){
                //Iniciar o cadastro da nova empresa
                $db_empresa = array(
                    'EMP_TIPO' => $dados['EMP_TIPO'],
                    'EMP_DT_CADASTRO'=> date('Y-m-d H:i:s'),
                    'EMP_DT_ATUALIZACAO'=> date('0000-00-00 00:00:00'),
                    'EMP_NOME_FANTASIA'   => $dados['EMP_NOME_FANTASIA'],
                    'EMP_RAZAO_SOCIAL'    => $dados['EMP_RAZAO_SOCIAL'],
                    'EMP_REGULAMENTACAO'  => $dados['EMP_REGULAMENTACAO'],
                    'EMP_PORTE' => $dados['EMP_PORTE'],
                    'EMP_REGISTRO' => $dados['EMP_REGISTRO'],
                    'EMP_INSCRICAO_ESTADUAL' => $dados['EMP_INSCRICAO_ESTADUAL'],
                    'EMP_DT_FUNDACAO'=> $dados['EMP_DT_FUNDACAO'],
                    'EMP_DESCRICAO'=> $dados['EMP_DESCRICAO'],
                    'EMP_TEL_1'=> $dados['EMP_TEL_1'],
                    'EMP_TEL_2'=> $dados['EMP_TEL_2'],
                    'EMP_CEL_1'=> $dados['EMP_CEL_1'],
                    'EMP_CEL_2'=> $dados['EMP_CEL_2'],
                    'EMP_EMAIL_1'=> $dados['EMP_EMAIL_1'],
                    'EMP_EMAIL_2'=> $dados['EMP_EMAIL_2'],
                    'EMP_DESCRICAO'=> $dados['EMP_DESCRICAO'],                        
                    'EMP_STATUS'=> 1
                );
                //CADASTRAR NOVA EMPRESA
                $id = $Empresa->cadastrar($db_empresa,0);
                if($id){
                    $ok = true;
                }else{
                    $ok = false;
                    Sessao::alert('ERRO',' 3- Erro ao cadastrar nova empresa, contate o suporte!','fs-4 alert alert-danger');
                }
            }else {
                $ok = true;
                $id = $emp['EMP_COD'];
            }
            $Enderecos->setCodEmpresa($id);
            $endr = $Enderecos->checarEnderecoEmpresa();
            if(!$endr){
                $dados_endereco['END_LOGRADOURO'] = $Check->checarString($dados['END_LOGRADOURO']);
                $dados_endereco['END_NUMERO'] = $Check->checarString($dados['END_NUMERO']);
                $dados_endereco['END_BAIRRO'] = $Check->checarString($dados['END_BAIRRO']);
                $dados_endereco['END_CIDADE'] = $Check->checarString($dados['END_CIDADE']);
                $dados_endereco['END_ESTADO'] = $Check->checarString($dados['END_ESTADO']);
                $dados_endereco['END_CEP'] = $Check->checarString($dados['END_CEP']);
                $db_endereco = array(
                    'USU_COD' => 0,
                    'EMP_COD' => $id,
                    'END_DT_CADASTRO' => date('Y-m-d H:i:s'),
                    'END_DT_ATUALIZACAO' => date('0000-00-00 00:00:00'),
                    'END_LOGRADOURO' =>  $dados_endereco['END_LOGRADOURO'],
                    'END_NUMERO' =>  $dados_endereco['END_NUMERO'],
                    'END_BAIRRO' =>  $dados_endereco['END_BAIRRO'],
                    'END_CIDADE' =>  $dados_endereco['END_CIDADE'],
                    'END_ESTADO' =>  $dados_endereco['END_ESTADO'],
                    'END_CEP'    =>  $dados_endereco['END_CEP'],
                    'END_STATUS' => 1
                );
                //CADASTRAR O ENDERECO DA EMPRESA
                if($Enderecos->cadastrar($db_endereco,0)){
                    $ok = true;
                }else {
                    $ok = true;
                }
            }
           
            if ($ok) {
               
                $ok2 = true;
                $UsuariosEmpresa->setCodUsuario($dados['USU_COD']);
                $UsuariosEmpresa->setCodEmpresa($id);
                $usu_emp = $UsuariosEmpresa->checarUsuarioEmpresa();
                //VERIFICAR SE O USUARIO ESTA VINCULADO A NOVA EMPRESA
                if(!$usu_emp){
                  
                    $db_usuario_empresa = array(
                        'EMP_COD' => $id,
                        'USU_COD' => $dados['USU_COD'],
                        'UMP_DT_CADASTRO' => date('Y-m-d H:i:s'),
                        'UMP_STATUS' => 1
                    );
                    //CADASTRAR O USUARIO NA EMPRESA
                    if($UsuariosEmpresa->cadastrar($db_usuario_empresa,0)){
                        $ok2 = true;
                    }else {
                        $ok2 = false;
                        Sessao::alert('ERRO',' 2- Erro ao vincular nova empresa ao usuário, contate o suporte!','fs-4 alert alert-danger');
                    }
                }else {
                   
                    $db_usuario_empresa = array(
                        'EMP_COD' => $id,
                        'USU_COD' => $dados['USU_COD'],
                        'UMP_DT_CADASTRO' => date('Y-m-d H:i:s'),
                        'UMP_STATUS' => 1
                    );
                    //$UsuariosEmpresa->setCodUsuario($dados['USU_COD']);
                    //$UsuariosEmpresa->setCodEmpresa($id);
                    //$UsuariosEmpresa->alterar($db_usuario_empresa,0);
                    $ok2 = true;
                }

                //VERIFICAR SE USUARIO FOI VINCULADO OU NAO HA NOVA EMPRESA
                if ($ok2) {
                    $db_modulos_empresa = [];
                    $m = 0;
                    //LIBERAR MODULOS PARA EMPRESA
                    for ($i = 1; $i <= 3; $i++) {           
                       
                        $ModulosEmpresa->setCodModulo($i);
                        $ModulosEmpresa->setCodEmpresa($id);
                        if(!$ModulosEmpresa->checarRegistroModuloEmpresa()){
                            $db_modulos_empresa = array(
                                'EMP_COD' => $id,
                                'MOD_COD' => $i,
                                'MLE_DT_CADASTRO' => date('Y-m-d H:i:s'),
                                'MLE_STATUS' => 1
                            );
                            if($ModulosEmpresa->cadastrar($db_modulos_empresa,0)){
                                $m++;
                                unset($db_modulos_empresa);
                            }
                        }else {
                            $m++;
                        }
                       
                    } 
                    //VERIFICAR SE FOI LIBERADO NO MINIMO 2 MÓDULOS A EMPRESA DO USUARIO
                    if ($m >= 2) {

                        $db_conta_empresa = array(
                            'EMP_COD'  => $id,
                            'CTA_TIPO' => 'PJ',
                            'CTA_DT_CADASTRO'    => date('Y-m-d H:i:s'),
                            'CTA_DT_ATUALIZACAO' => date('0000-00-00 00:00:00'),
                            'CTA_NOME'     => 'PRINCIPAL',
                            'CTA_DESCRICAO'=> 'CONTA PRINCIPAL DA EMPRESA',   
                            'CTA_SALDO'  => 0,
                            'CTA_STATUS' => 1
                        );
                        
                        $Financas->setCodEmpresa($id);
                        if(!$Financas->checarRegistroContaEmpresa()){
                            if ($Financas->cadastrar($db_conta_empresa,0)) {
                                Sessao::alert('OK','Cadastro efetuado com sucesso!','fs-4 alert alert-success');

                            }else {
                                Sessao::alert('OK','Cadastro efetuado com sucesso, crie uma conta para gerenciar sua movimentação','fs-4 alert alert-success');
                            }
                        }else {
                            Sessao::alert('OK','Cadastro efetuado com sucesso!','fs-4 alert alert-success');
                        }
                        $db_usuario = array(
                            'EMP_COD'  => $id,
                            'USU_DT_ATUALIZACAO' => date('Y-m-d H:i:s')
                        );
                        $Usuarios->setCodigo($dados['USU_COD']);
                        $Usuarios->alterar($db_usuario,0);

                    }else {
                        Sessao::alert('ERRO',' 2- Módulos não foram liberados, contate o suporte!','alert alert-danger');
                    }
                    
                }
            }
        }else{
            Sessao::alert('ERRO',' 1- Dados inválido(s)!','alert alert-danger');
        }

        $UsuariosEmpresa->setCodUsuario($_SESSION['USU_COD']);
        $this->dados['usuarios_empresa'] = $UsuariosEmpresa->checarUsuario();
        if (isset($this->dados['usuarios_empresa']['UMP_COD'])) {
            $_SESSION['EMP_COD'] = $this->dados['usuarios_empresa']['EMP_COD'];
            $Empresa->setCodigo($_SESSION['EMP_COD']);
            $this->dados['empresa'] = $Empresa->listar(0);
            $ModulosEmpresa->setCodEmpresa($_SESSION['EMP_COD']);
            $this->dados['modulos_empresa'] = $ModulosEmpresa->listar();
        }else {
            $this->dados['modulos_empresa'] = false;
            $this->dados['empresa'] = false;
        }

        $this->render('admin/cadastros/empresas/cadastrar', $this->dados);
    }
    public function alterar_empresas() : void 
    {
        $this->dados['title'] .= 'EMPRESA/NEGÓCIO';
        $Usuarios = new Usuarios;
        $Empresa = new Empresas;
        $Enderecos = new Enderecos;
        $UsuariosEmpresa = new UsuariosEmpresa();
        $Usuarios->setCodUsuario($_SESSION['USU_COD']);
        $UsuariosEmpresa->setCodUsuario($_SESSION['USU_COD']);
        $this->dados['usuarios_empresa'] = $UsuariosEmpresa->checarUsuario();
        $dados = filter_input_array(INPUT_GET, FILTER_DEFAULT);
        $dados = explode("/",$dados['url']);
        if (isset($dados[1]) && $dados[1] == 'alterar_empresas') {
       
            if(isset($dados[3]) && isset($dados[2])){
                $UsuariosEmpresa->setCodigo($dados[3]);
                $UsuariosEmpresa->setCodEmpresa($dados[2]);
                $this->dados['empresa'] = $UsuariosEmpresa->listar(0);
                $this->render('admin/cadastros/empresas/alterar', $this->dados);
            }else{
                Sessao::alert('ERRO',' 1- Dados inválido(s)!','alert alert-danger');
                $this->render('admin/cadastros/empresas/listar', $this->dados);
            }
        }
        
    }
    public function alterar_dados_empresa()
    {
        $this->dados['title'] .= 'EMPRESA/NEGÓCIO';
        $Usuarios = new Usuarios;
        $Empresa = new Empresas;
        $Enderecos = new Enderecos;
        $Check = new Check();
        $UsuariosEmpresa = new UsuariosEmpresa();
        $Usuarios->setCodUsuario($_SESSION['USU_COD']);
        $UsuariosEmpresa->setCodUsuario($_SESSION['USU_COD']);
        $Usuarios->setCodUsuario($_SESSION['USU_COD']);
        $this->dados['usuario'] = $Usuarios->listar(0);
        $this->dados['usuarios_empresa'] = $UsuariosEmpresa->checarUsuario();

        $dados = filter_input_array(INPUT_POST, FILTER_DEFAULT);
        if (isset($_POST) && isset($dados['ALTERAR_EMPRESA'])) {

            unset($dados['ALTERAR_EMPRESA']);
            
            if($_SESSION['USU_COD'] == $dados['USU_COD'] && $_SESSION['EMP_COD']  == $dados['EMP_COD']){
                
                $UsuariosEmpresa->setCodigo($dados['USU_COD']);
                $UsuariosEmpresa->setCodEmpresa($dados['EMP_COD']);
                
                $dados += array(
                    'EMP_DT_ATUALIZACAO'=> date('Y-m-d H:i:s'),
                );

                unset($dados['USU_COD']);
                
                $ok = true;
                foreach ($dados as $key => $value) {
                    $value = $Check->checarString($value);
                }
                //VERIFICAR SE TODOS OS CAMPOS FORAM PREENCHIDOS
                if ($ok) {
                    $Empresa->setCodigo($dados['EMP_COD']);
                    $db_endereco = array(
                        'USU_COD' => 0,
                        'EMP_COD' => $dados['EMP_COD'],
                        'END_DT_ATUALIZACAO' => date('Y-m-d H:i:s'),
                        'END_LOGRADOURO' =>  $dados['END_LOGRADOURO'],
                        'END_NUMERO' =>  $dados['END_NUMERO'],
                        'END_BAIRRO' =>  $dados['END_BAIRRO'],
                        'END_CEP'    =>  $dados['END_CEP'],
                        'END_CIDADE' =>  $dados['END_CIDADE'],
                        'END_ESTADO' =>  $dados['END_ESTADO']
                    );
                    
                    //REMOVENDO DADOS DE ENDERECO DA ATUALIZACAO DA EMPRESA
                    unset($dados["END_LOGRADOURO"]);
                    unset($dados["END_NUMERO"]);
                    unset($dados["END_BAIRRO"]);
                    unset($dados["END_CEP"]);
                    unset($dados["END_CIDADE"]);
                    unset($dados["END_ESTADO"]);

                    if($Empresa->alterar($dados,0)){
                        
                        $Enderecos->setCodEmpresa($dados['EMP_COD']);
                        $id = $Enderecos->checarEnderecoEmpresa();

                        $Enderecos->setCodigo($id[0]['END_COD']);
                       
                        if($Enderecos->alterarEmpresa($db_endereco,0)){
                           
                            Sessao::alert('OK','Cadastro alterado com sucesso!','fs-4 alert alert-success');
                        }else {
                            Sessao::alert('ERRO','Cadastro alterado, houve um erro ao alterar o endereço!','fs-4 alert alert-warning');
                        }
                    }else{
                        Sessao::alert('ERRO',' 3- Erro ao alterar sua empresa, entre em contato com o suporte!','fs-4 alert alert-danger');
                    }
                }
            }else{
                Sessao::alert('ERRO',' 2- Acesso inválido!','fs-4 alert alert-danger');
            }
        }else{
            Sessao::alert('ERRO',' 1- Dados inválido(s)!','fs-4 alert alert-danger');
        }

        $this->dados['empresa'] = $UsuariosEmpresa->listar(0);
        
        $this->render('admin/cadastros/empresas/alterar', $this->dados);
    }



    **/